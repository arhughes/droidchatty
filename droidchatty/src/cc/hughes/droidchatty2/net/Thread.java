// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: c:\apps\protoc\message.proto
package cc.hughes.droidchatty2.net;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class Thread extends Message {

  public static final List<Reply> DEFAULT_REPLY = Collections.emptyList();

  @ProtoField(tag = 1, label = REPEATED)
  public final List<Reply> reply;

  private Thread(Builder builder) {
    super(builder);
    this.reply = immutableCopyOf(builder.reply);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Thread)) return false;
    return equals(reply, ((Thread) other).reply);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = reply != null ? reply.hashCode() : 0);
  }

  public static final class Builder extends Message.Builder<Thread> {

    public List<Reply> reply;

    public Builder() {
    }

    public Builder(Thread message) {
      super(message);
      if (message == null) return;
      this.reply = copyOf(message.reply);
    }

    public Builder reply(List<Reply> reply) {
      this.reply = reply;
      return this;
    }

    @Override
    public Thread build() {
      return new Thread(this);
    }
  }

  public static final class Reply extends Message {

    public static final String DEFAULT_ID = "";
    public static final String DEFAULT_AUTHOR = "";
    public static final String DEFAULT_DATE = "";
    public static final Integer DEFAULT_DEPTH = 0;
    public static final String DEFAULT_CATEGEORY = "";
    public static final String DEFAULT_BODY = "";

    @ProtoField(tag = 1, type = STRING, label = REQUIRED)
    public final String id;

    @ProtoField(tag = 2, type = STRING, label = REQUIRED)
    public final String author;

    @ProtoField(tag = 3, type = STRING, label = REQUIRED)
    public final String date;

    @ProtoField(tag = 4, type = INT32, label = REQUIRED)
    public final Integer depth;

    @ProtoField(tag = 5, type = STRING, label = REQUIRED)
    public final String categeory;

    @ProtoField(tag = 6, type = STRING, label = REQUIRED)
    public final String body;

    private Reply(Builder builder) {
      super(builder);
      this.id = builder.id;
      this.author = builder.author;
      this.date = builder.date;
      this.depth = builder.depth;
      this.categeory = builder.categeory;
      this.body = builder.body;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof Reply)) return false;
      Reply o = (Reply) other;
      return equals(id, o.id)
          && equals(author, o.author)
          && equals(date, o.date)
          && equals(depth, o.depth)
          && equals(categeory, o.categeory)
          && equals(body, o.body);
    }

    @Override
    public int hashCode() {
      int result = hashCode;
      if (result == 0) {
        result = id != null ? id.hashCode() : 0;
        result = result * 37 + (author != null ? author.hashCode() : 0);
        result = result * 37 + (date != null ? date.hashCode() : 0);
        result = result * 37 + (depth != null ? depth.hashCode() : 0);
        result = result * 37 + (categeory != null ? categeory.hashCode() : 0);
        result = result * 37 + (body != null ? body.hashCode() : 0);
        hashCode = result;
      }
      return result;
    }

    public static final class Builder extends Message.Builder<Reply> {

      public String id;
      public String author;
      public String date;
      public Integer depth;
      public String categeory;
      public String body;

      public Builder() {
      }

      public Builder(Reply message) {
        super(message);
        if (message == null) return;
        this.id = message.id;
        this.author = message.author;
        this.date = message.date;
        this.depth = message.depth;
        this.categeory = message.categeory;
        this.body = message.body;
      }

      public Builder id(String id) {
        this.id = id;
        return this;
      }

      public Builder author(String author) {
        this.author = author;
        return this;
      }

      public Builder date(String date) {
        this.date = date;
        return this;
      }

      public Builder depth(Integer depth) {
        this.depth = depth;
        return this;
      }

      public Builder categeory(String categeory) {
        this.categeory = categeory;
        return this;
      }

      public Builder body(String body) {
        this.body = body;
        return this;
      }

      @Override
      public Reply build() {
        checkRequiredFields();
        return new Reply(this);
      }
    }
  }
}
